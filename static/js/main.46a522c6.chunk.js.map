{"version":3,"sources":["redux/types.js","redux/reducers.js","redux/root-reducer.js","redux/actions.js","components/key/key.component.jsx","data/safe-data.js","utils.js","components/keyboard/keyboard.component.jsx","components/screen/screen.component.jsx","components/safe/safe.component.jsx","App.js","index.js"],"names":["ACTION_TYPES","SCREEN_ACTIVE","SCREEN_INACTIVE","SET_SCREEN_MESSAGE","SET_PASSWORD","SAVE_PASSWORD","SAFE_LOCK","SERVICE_MODE","READ_SCREEN_MESSAGE","INITIAL_STATE","screenStatusMessage","screenActive","safeLocked","password","savedPassword","readScreenMessage","serviceMode","store","createStore","state","action","type","payload","setScreenMessage","message","setScreenActive","active","setServiceMode","mode","lockSafe","lock","setPassword","connect","props","style","order","data","className","onClick","e","trimmedPassword","target","innerHTML","substring","length","debouncedHandler","debouncedHandlerIdleScreen","dispatch","handleClick","val","API","SAFE_SERIAL_NUMBER","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","console","log","Keyboard","validateCode","code","fetch","then","response","handlePassword","bind","handleIdleScreen","renderKeys","map","key","savePassword","Component","Safe","App","ReactDOM","render","document","getElementById"],"mappings":"qUAWeA,EAXM,CACnBC,cAAgB,gBAChBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,aAAc,eACdC,cAAe,gBACfC,UAAW,YACXC,aAAc,eACdC,oBAAqB,uBCNjBC,EAAgB,CACpBC,oBAAqB,GACrBC,cAAc,EACdC,YAAY,EACZC,SAAU,GACVC,cAAe,GACfC,mBAAmB,EACnBC,aAAa,GCHAC,EAFDC,aDQa,WAAoC,IAAnCC,EAAkC,uDAA1BV,EAAeW,EAAW,uCAC5D,OAAOA,EAAOC,MACZ,KAAKrB,EAAaG,mBAChB,OAAO,2BACFgB,GADL,IAEET,oBAAqBU,EAAOE,UAEhC,KAAKtB,EAAaK,cAChB,OAAO,2BACFc,GADL,IAEEL,cAAeM,EAAOE,UAE1B,KAAKtB,EAAaI,aAChB,OAAO,2BACFe,GADL,IAEEN,SAAUO,EAAOE,UAErB,KAAKtB,EAAaC,cAChB,OAAO,2BACFkB,GADL,IAEER,aAAcS,EAAOE,UAEzB,KAAKtB,EAAaM,UAChB,OAAO,2BACFa,GADL,IAEEP,WAAYQ,EAAOE,UAEvB,KAAKtB,EAAaO,aAChB,OAAO,2BACFY,GADL,IAEEH,YAAaI,EAAOE,UAExB,KAAKtB,EAAaQ,oBAChB,OAAO,2BACFW,GADL,IAEEJ,kBAAmBK,EAAOE,UAE9B,QACE,OAAOH,M,oDEhDAI,G,MAAmB,SAACC,GAC/B,MAAO,CACLH,KAAMrB,EAAaG,mBACnBmB,QAASE,KAIAC,EAAkB,SAACC,GAC9B,MAAO,CACLL,KAAMrB,EAAaC,cACnBqB,QAASI,IAIAC,EAAiB,SAACC,GAC7B,MAAO,CACLP,KAAMrB,EAAaO,aACnBe,QAASM,IAIAC,EAAW,SAACC,GACvB,MAAO,CACLT,KAAMrB,EAAaM,UACnBgB,QAASQ,IAWAC,EAAc,SAAClB,GAC1B,MAAO,CACLQ,KAAMrB,EAAaI,aACnBkB,QAAST,IAIAE,EAAoB,SAACS,GAChC,MAAO,CACLH,KAAMrB,EAAaQ,oBACnBc,QAASE,I,eCHEQ,eAPS,SAAAf,GACtB,MAAO,CACLJ,SAAUI,EAAMJ,SAChBG,YAAaC,EAAMD,eAIRgB,EAtCH,SAAEC,GAmBZ,OACE,wBACEZ,KAAK,OACLa,MAAO,CAACC,MAAOF,EAAMG,KAAKD,OAC1BE,UAAU,WACVC,QAAS,SAAAC,GAAC,OAtBM,SAAAA,GAAM,IAClB1B,EAA0BoB,EAA1BpB,SAAUG,EAAgBiB,EAAhBjB,YACdwB,EAAe,UAAM3B,GAAN,OAClB0B,EAAEE,OAAOC,WAEVF,EAAkBxB,EACfwB,EACAA,EAAgBG,UAChBH,EAAgBI,OAAS,EACzBJ,EAAgBI,QAEnBX,EAAMY,mBACNZ,EAAMa,6BACNb,EAAMc,SAAStB,GAAgB,IAC/BQ,EAAMc,SAAShB,EAAYS,IAQTQ,CAAYT,IAJ5B,SAMIN,EAAMG,KAAKa,SChCNC,EACZ,sGAEYC,EAAqB,WCH3B,SAASC,EAASC,EAAMC,EAAMC,GACpC,IAAIC,EAEJ,OAAO,WACN,IAAIC,EAAUC,KACbC,EAAOC,UACJC,EAAQ,WACXL,EAAU,KACLD,GAAWF,EAAKS,MAAML,EAASE,IAEjCI,EAAUR,IAAcC,EAC5BQ,aAAaR,GACbA,EAAUS,WAAWJ,EAAOP,GACxBS,GAASV,EAAKS,MAAML,EAASE,IAMjBO,QAAQC,IAAnB,ICADC,E,4MACLC,aAAe,SAAAC,GACdC,MAAM,GAAD,OAAIrB,GAAJ,OAAUoB,IAAQE,MAAK,SAAAC,GACvBA,EAASrC,OAASe,GACrB,EAAKlB,MAAMc,SAASxB,EAAiB,cACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAASxB,EAAiB,UACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAAShC,GAAkB,MACpC,MACH,EAAKkB,MAAMc,SAASlB,GAAS,IAC7B,EAAKI,MAAMc,SAASpB,GAAe,MACjC,QAEH,EAAKM,MAAMc,SAASxB,EAAiB,UACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAAShC,GAAkB,MACpC,W,EAmEN8B,iBAAmBO,EAAS,EAAKsB,eAAeC,KAApB,gBAAgC,M,EAC5D7B,2BAA6BM,EAC5B,EAAKwB,iBAAiBD,KAAtB,gBACA,K,EAGAE,WAAa,WAgBb,MAfa,CACZ,CAAE5B,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,KACnB,CAAEc,IAAK,IAAKd,MAAO,MAGR2C,KAAI,SAAAC,GAAG,OAClB,cAAC,EAAD,CACClC,iBAAkB,EAAKA,iBACvBC,2BAA4B,EAAKA,2BACjCV,KAAM2C,GACDA,EAAI9B,S,oDAzFZ,WAAkB,IAAD,SAMZS,KAAKzB,MAJRnB,EAFe,EAEfA,cACAF,EAHe,EAGfA,WACAC,EAJe,EAIfA,SACAG,EALe,EAKfA,YAKD,GAHA0C,KAAKzB,MAAMc,SAAStB,GAAgB,IACpCiC,KAAKzB,MAAMc,SAAShC,GAAkB,IAElCC,EAGH,OAFA0C,KAAKW,aAAaxD,QAClB6C,KAAKzB,MAAMc,SAAShB,EAAY,KAG7BnB,EACc,WAAbC,GAA2C,WAAlBC,GAC5B4C,KAAKzB,MAAMc,SAASxB,EAAiB,YACrCmC,KAAKzB,MAAMc,SAASpB,GAAe,IACnCsC,YAAW,WACV,EAAKhC,MAAMc,SAAShC,GAAkB,MACpC,OACOD,IAAkBD,GAC5B6C,KAAKzB,MAAMc,SAASxB,EAAiB,cACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAASxB,EAAiB,UACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAAShC,GAAkB,MACpC,MACH,EAAKkB,MAAMc,SAASlB,GAAS,MAC3B,QAEH6B,KAAKzB,MAAMc,SAASxB,EAAiB,UACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAAShC,GAAkB,MACpC,OAGoB,IAApBF,EAAS+B,QACZc,KAAKzB,MAAMc,SJlDa,SAAClC,GAC3B,MAAO,CACLQ,KAAMrB,EAAaK,cACnBiB,QAAST,GI+CWmE,CAAanE,IACjC6C,KAAKzB,MAAMc,SAASxB,EAAiB,YACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAASlB,GAAS,IAC7B,EAAKI,MAAMc,SAASxB,EAAiB,UACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAAShC,GAAkB,MACpC,QACD,QAEH2C,KAAKzB,MAAMc,SAASxB,EAAiB,UACrC0C,YAAW,WACV,EAAKhC,MAAMc,SAAShC,GAAkB,MACpC,OAGL2C,KAAKzB,MAAMc,SAAShB,EAAY,O,8BAGjC,WACC2B,KAAKzB,MAAMc,SAAStB,GAAgB,M,oBAmCrC,WACC,OAAO,qBAAKY,UAAU,qBAAf,SAAqCqB,KAAKmB,mB,GArH5BI,aAmIRjD,eAVS,SAAAf,GACtB,MAAO,CACLJ,SAAUI,EAAMJ,SAChBH,oBAAqBO,EAAMP,oBAC3BI,cAAeG,EAAMH,cACrBF,WAAYK,EAAML,WAClBI,YAAaC,EAAMD,eAIRgB,CAAyBoC,GC3HzBpC,G,MAAAA,aAVS,SAAAf,GACtB,MAAO,CACLJ,SAAUI,EAAMJ,SAChBH,oBAAqBO,EAAMP,oBAC3BC,aAAcM,EAAMN,aACpBC,WAAYK,EAAML,WAClBG,kBAAmBE,EAAMF,qBAIdiB,EAtBA,SAAAC,GACb,OACE,sBAAKI,UAAYJ,EAAMtB,aACnB,0BACA,4BAFJ,UAIE,qBAAK0B,UAAU,eAAf,SAAgCJ,EAAMrB,WAAa,SAAW,aAC9D,qBAAKyB,UAAU,aAAf,SAA8BJ,EAAMlB,kBAAoBkB,EAAMvB,oBAAsBuB,EAAMpB,kBCOjFqE,EAVF,WACT,OACE,sBAAK7C,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,cAAf,kBAAmCc,SCI5BgC,MAVf,WACE,OACE,cAAC,IAAD,CAAUlE,MAAOA,EAAjB,SACE,qBAAKoB,UAAU,MAAf,SACE,cAAC,EAAD,SCPR+C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.46a522c6.chunk.js","sourcesContent":["const ACTION_TYPES = {\r\n  SCREEN_ACTIVE : 'SCREEN_ACTIVE',\r\n  SCREEN_INACTIVE: 'SCREEN_INACTIVE',\r\n  SET_SCREEN_MESSAGE: 'SET_SCREEN_MESSAGE',\r\n  SET_PASSWORD: 'SET_PASSWORD',\r\n  SAVE_PASSWORD: 'SAVE_PASSWORD',\r\n  SAFE_LOCK: 'SAFE_LOCK',\r\n  SERVICE_MODE: 'SERVICE_MODE',\r\n  READ_SCREEN_MESSAGE: 'READ_SCREEN_MESSAGE'\r\n}\r\n\r\nexport default ACTION_TYPES;","import ACTION_TYPES from \"./types\";\r\n\r\nconst INITIAL_STATE = {\r\n  screenStatusMessage: '',\r\n  screenActive: false,\r\n  safeLocked: false,\r\n  password: '',\r\n  savedPassword: '',\r\n  readScreenMessage: false,\r\n  serviceMode: false\r\n};\r\n\r\nexport const safeReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case ACTION_TYPES.SET_SCREEN_MESSAGE:\r\n      return {\r\n        ...state,\r\n        screenStatusMessage: action.payload\r\n      };\r\n    case ACTION_TYPES.SAVE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        savedPassword: action.payload\r\n      };\r\n    case ACTION_TYPES.SET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.payload\r\n      };\r\n    case ACTION_TYPES.SCREEN_ACTIVE:\r\n      return {\r\n        ...state,\r\n        screenActive: action.payload\r\n      };\r\n    case ACTION_TYPES.SAFE_LOCK:\r\n      return {\r\n        ...state,\r\n        safeLocked: action.payload\r\n      };\r\n    case ACTION_TYPES.SERVICE_MODE:\r\n      return {\r\n        ...state,\r\n        serviceMode: action.payload\r\n      }\r\n    case ACTION_TYPES.READ_SCREEN_MESSAGE:\r\n      return {\r\n        ...state,\r\n        readScreenMessage: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore } from 'redux';\r\n\r\nimport { safeReducer } from './reducers'; \r\n\r\nconst store = createStore(safeReducer);\r\n\r\nexport default store;","import ACTION_TYPES from \"./types\";\r\n\r\nexport const setScreenMessage = (message) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_SCREEN_MESSAGE,\r\n    payload: message\r\n  };\r\n};\r\n\r\nexport const setScreenActive = (active) => {\r\n  return {\r\n    type: ACTION_TYPES.SCREEN_ACTIVE,\r\n    payload: active\r\n  };\r\n};\r\n\r\nexport const setServiceMode = (mode) => {\r\n  return {\r\n    type: ACTION_TYPES.SERVICE_MODE,\r\n    payload: mode\r\n  };\r\n};\r\n\r\nexport const lockSafe = (lock) => {\r\n  return {\r\n    type: ACTION_TYPES.SAFE_LOCK,\r\n    payload: lock\r\n  };\r\n};\r\n\r\nexport const savePassword = (password) => {\r\n  return {\r\n    type: ACTION_TYPES.SAVE_PASSWORD,\r\n    payload: password\r\n  };\r\n};\r\n\r\nexport const setPassword = (password) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_PASSWORD,\r\n    payload: password\r\n  };\r\n};\r\n\r\nexport const readScreenMessage = (message) => {\r\n  return {\r\n    type: ACTION_TYPES.READ_SCREEN_MESSAGE,\r\n    payload: message\r\n  };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPassword, setScreenActive } from '../../redux/actions';\r\n\r\nimport './key.styles.scss';\r\n\r\nconst Key = ( props ) => {\r\n\r\n  const handleClick = e => {\r\n\t\tconst { password, serviceMode } = props;\r\n\t\tlet trimmedPassword = `${password}${\r\n\t\t\te.target.innerHTML\r\n\t\t}`;\r\n\t\ttrimmedPassword = serviceMode\r\n\t\t\t? trimmedPassword\r\n\t\t\t: trimmedPassword.substring(\r\n\t\t\t\t\ttrimmedPassword.length - 6,\r\n\t\t\t\t\ttrimmedPassword.length\r\n\t\t\t  );\r\n\t\tprops.debouncedHandler();\r\n\t\tprops.debouncedHandlerIdleScreen();\r\n\t\tprops.dispatch(setScreenActive(true));\r\n\t\tprops.dispatch(setPassword(trimmedPassword));\r\n\t};\r\n\r\n  return (\r\n    <button \r\n      type=\"text\"\r\n      style={{order: props.data.order}} \r\n      className=\"safe-key\"\r\n      onClick={e => handleClick(e)}\r\n      >\r\n      { props.data.val }\r\n    </button>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    password: store.password,\r\n    serviceMode: store.serviceMode\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Key);","export const API =\r\n\t'https://9w4qucosgf.execute-api.eu-central-1.amazonaws.com/default/CR-JS_team_M02a?code=456R987L0123';\r\n\r\nexport const SAFE_SERIAL_NUMBER = 4815162342;","export function debounce(func, wait, immediate) {\r\n\tlet timeout;\r\n\r\n\treturn function() {\r\n\t\tlet context = this,\r\n\t\t\targs = arguments;\r\n\t\tlet later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tlet callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n}\r\n\r\n\r\n\r\nexport const cl = console.log;","import React, { Component} from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport './keyboard.styles.scss';\r\n\r\nimport { \r\n  setServiceMode,\r\n  lockSafe,\r\n  readScreenMessage,\r\n  savePassword,\r\n  setPassword,\r\n  setScreenActive,\r\n  setScreenMessage\r\n} from '../../redux/actions'\r\n\r\nimport Key from '../key/key.component';\r\nimport {API, SAFE_SERIAL_NUMBER} from '../../data/safe-data';\r\nimport { debounce } from '../../utils';\r\n\r\nclass Keyboard extends Component {\r\n\tvalidateCode = code => {\r\n\t\tfetch(`${API}${code}`).then(response => {\r\n\t\t\tif (response.data === SAFE_SERIAL_NUMBER) {\r\n\t\t\t\tthis.props.dispatch(setScreenMessage('Unlocking'));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.dispatch(setScreenMessage('Ready'));\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.props.dispatch(readScreenMessage(false));\r\n\t\t\t\t\t}, 1200);\r\n\t\t\t\t\tthis.props.dispatch(lockSafe(false));\r\n\t\t\t\t\tthis.props.dispatch(setServiceMode(false));\r\n\t\t\t\t}, 1200);\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.dispatch(setScreenMessage('Error'));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.dispatch(readScreenMessage(false));\r\n\t\t\t\t}, 1200);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\thandlePassword() {\r\n\t\tconst {\r\n\t\t\tsavedPassword,\r\n\t\t\tsafeLocked,\r\n\t\t\tpassword,\r\n\t\t\tserviceMode\r\n\t\t} = this.props;\r\n\t\tthis.props.dispatch(setScreenActive(true));\r\n\t\tthis.props.dispatch(readScreenMessage(true));\r\n\r\n\t\tif (serviceMode) {\r\n\t\t\tthis.validateCode(password);\r\n\t\t\tthis.props.dispatch(setPassword(''));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (safeLocked) {\r\n\t\t\tif (password === '000000' && savedPassword !== '000000') {\r\n\t\t\t\tthis.props.dispatch(setScreenMessage('Service'));\r\n\t\t\t\tthis.props.dispatch(setServiceMode(true));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.dispatch(readScreenMessage(false));\r\n\t\t\t\t}, 1200);\r\n\t\t\t} else if (savedPassword === password) {\r\n\t\t\t\tthis.props.dispatch(setScreenMessage('Unlocking'));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.dispatch(setScreenMessage('Ready'));\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.props.dispatch(readScreenMessage(false));\r\n\t\t\t\t\t}, 1200);\r\n\t\t\t\t\tthis.props.dispatch(lockSafe(false));\r\n\t\t\t\t}, 1200);\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.dispatch(setScreenMessage('Error'));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.dispatch(readScreenMessage(false));\r\n\t\t\t\t}, 1200);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (password.length === 6) {\r\n\t\t\t\tthis.props.dispatch(savePassword(password));\r\n\t\t\t\tthis.props.dispatch(setScreenMessage('Locking'));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.dispatch(lockSafe(true));\r\n\t\t\t\t\tthis.props.dispatch(setScreenMessage('Ready'));\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.props.dispatch(readScreenMessage(false));\r\n\t\t\t\t\t}, 1200);\r\n\t\t\t\t}, 1200);\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.dispatch(setScreenMessage('Error'));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.props.dispatch(readScreenMessage(false));\r\n\t\t\t\t}, 1200);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.dispatch(setPassword(''));\r\n\t}\r\n\r\n\thandleIdleScreen() {\r\n\t\tthis.props.dispatch(setScreenActive(false));\r\n\t}\r\n\r\n\tdebouncedHandler = debounce(this.handlePassword.bind(this), 1200);\r\n\tdebouncedHandlerIdleScreen = debounce(\r\n\t\tthis.handleIdleScreen.bind(this),\r\n\t\t5000\r\n\t);\r\n\r\n  renderKeys = () => {\r\n\t\tconst keys = [\r\n\t\t\t{ val: '0', order: '5' },\r\n\t\t\t{ val: '1', order: '3' },\r\n\t\t\t{ val: '2', order: '3' },\r\n\t\t\t{ val: '3', order: '3' },\r\n\t\t\t{ val: '4', order: '2' },\r\n\t\t\t{ val: '5', order: '2' },\r\n\t\t\t{ val: '6', order: '2' },\r\n\t\t\t{ val: '7', order: '1' },\r\n\t\t\t{ val: '8', order: '1' },\r\n\t\t\t{ val: '9', order: '1' },\r\n\t\t\t{ val: '*', order: '4' },\r\n\t\t\t{ val: 'L', order: '6' }\r\n\t\t];\r\n\r\n\t\treturn keys.map(key => (\r\n\t\t\t<Key\r\n\t\t\t\tdebouncedHandler={this.debouncedHandler}\r\n\t\t\t\tdebouncedHandlerIdleScreen={this.debouncedHandlerIdleScreen}\r\n\t\t\t\tdata={key}\r\n\t\t\t\tkey={key.val}\r\n\t\t\t/>\r\n\t\t));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <div className=\"keyboard-container\">{this.renderKeys()}</div>;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    password: store.password,\r\n    screenStatusMessage: store.screenStatusMessage,\r\n    savedPassword: store.savedPassword,\r\n    safeLocked: store.safeLocked,\r\n    serviceMode: store.serviceMode\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Keyboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport \"./screen.styles.scss\"\r\n\r\nconst Screen = props => {\r\n  return (\r\n    <div className={ props.screenActive \r\n      ? 'screen-container active'\r\n      : 'screen-container inactive'}\r\n      >\r\n      <div className='small-screen'>{ props.safeLocked ? 'Locked' : 'Unlocked'}</div>\r\n      <div className='big-screen'>{ props.readScreenMessage ? props.screenStatusMessage : props.password}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    password: store.password,\r\n    screenStatusMessage: store.screenStatusMessage,\r\n    screenActive: store.screenActive,\r\n    safeLocked: store.safeLocked,\r\n    readScreenMessage: store.readScreenMessage\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Screen);","import React from 'react';\r\n\r\nimport \"./safe.styles.scss\"\r\n\r\nimport Keyboard from '../keyboard/keyboard.component';\r\nimport Screen from '../screen/screen.component';\r\n\r\nimport { SAFE_SERIAL_NUMBER } from '../../data/safe-data'\r\n\r\nconst Safe = () => {\r\n    return (\r\n      <div className=\"safe-container\">\r\n        <Screen></Screen>\r\n        <Keyboard></Keyboard>\r\n        <div className=\"safe-number\">S/N: {SAFE_SERIAL_NUMBER}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Safe;","import React from \"react\";\nimport { Provider } from 'react-redux';\nimport store from \"./redux/root-reducer\";\n\nimport './App.scss'\n\nimport Safe from \"./components/safe/safe.component\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Safe></Safe>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}